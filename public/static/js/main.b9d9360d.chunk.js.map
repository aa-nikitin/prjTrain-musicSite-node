{"version":3,"sources":["assets/img/Music.jpg","components/Logo/Logo.js","api.js","context/AuthContext.js","context/DataContext.js","components/Socials/Socials.js","components/Header/Header.js","components/About/About.js","components/MyNumbers/MyNumbers.js","components/Products/Products.js","components/Modal/Modal.js","components/OrderMain/OrderMain.js","components/Footer/Footer.js","components/LoginForm/LoginForm.js","components/AdminHeader/AdminHeader.js","components/AdminCounters/AdminCounters.js","components/AdminProducts/AdminProducts.js","components/AdminContent/AdminContent.js","pages/Admin.js","pages/Error404.js","pages/Login.js","pages/Main.js","App.js","components/PrivateRoute/PrivateRoute.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","_ref","children","linkMain","tpl","doter","react_default","a","createElement","className","class","Link","to","sendOrder","query","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","name","email","message","then","response","json","prodQuery","formData","FormData","append","image","price","axios","post","data","prodAll","get","countersAll","login","password","updateCounters","arrCounts","logout","React","createContext","Provider","Consumer","AuthProvider","state","isAuthorized","errorAuth","errorMessage","error","_this","setState","handleAutorize","auth","catch","console","log","handleLogout","setValueProvider","_this$state","redirectPath","_this2","this","props","value","Component","withAuth","WrapperComponent","_Component2","_class","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this3","ConsumerProps","assign","socials","icon","link","DataProvider","products","counters","loadProducts","prosucts","loadCounters","updateProducts","updateCount","DataContext_Provider","PureComponent","withData","_PureComponent2","DataContext_Consumer","Socials","map","item","href","concat","Header","Logo_Logo","About","src","music","alt","MyNumbers","_id","count","headSite","Products","id","Modal","el","document","handleClose","onClose","appendChild","removeChild","modalForm","onClick","ReactDOM","createPortal","OrderMain","handleChange","e","defineProperty","target","handleSubmit","preventDefault","result","maessage","Modal_Modal","action","htmlFor","type","onChange","Footer","LoginForm","_this$props","Redirect","placeholder","AdminHeader","AdminCounters","age","concerts","cities","years","series","head","AdminProducts","myRef","createRef","files","photo","current","_this$state2","encType","ref","AdminContent","Admin","AdminContent_AdminContent","Error404","Header_Header","Login","Main","react","rel","About_About","OrderMain_OrderMain","PrivateRoute","RouteComponent","component","rest","objectWithoutProperties","Route","render","routeProps","App","DataContext_DataProvider","AuthContext_AuthProvider","BrowserRouter","Switch","path","exact","App_PrivateRoute","Boolean","window","location","hostname","match","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9d9360d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Music.2857d6b1.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = ({ children, linkMain }) => {\r\n    const tpl = {\r\n        doter: <span className=\"title-name__doter\">.</span>,\r\n        class: 'header__text title-name'\r\n    };\r\n\r\n    return linkMain ? (\r\n        <Link className={tpl.class} to={linkMain}>\r\n            {children}\r\n            {tpl.doter}\r\n        </Link>\r\n    ) : (\r\n        <div className={tpl.class}>\r\n            {children}\r\n            {tpl.doter}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Logo };\r\n","import axios from 'axios';\r\nconst sendOrder = query =>\r\n    fetch(`/api/sendOrder`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: query.name,\r\n            email: query.email,\r\n            message: query.message\r\n        })\r\n    }).then(response => response.json());\r\n\r\nconst prodQuery = query => {\r\n    const formData = new FormData();\r\n    formData.append('file', query.image);\r\n    formData.append('name', query.name);\r\n    formData.append('price', query.price);\r\n    return axios\r\n        .post(`/api/newProduct`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then(response => response.data);\r\n};\r\n\r\nconst prodAll = () => {\r\n    return axios\r\n        .get(`/api/getProducts`, {\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response);\r\n};\r\n\r\nconst countersAll = () => {\r\n    return axios\r\n        .get(`/api/getCounters`, {\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response);\r\n};\r\n\r\nconst login = query =>\r\n    fetch(`/api/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email: query.email, password: query.password })\r\n    }).then(response => response.json());\r\n\r\nconst updateCounters = query =>\r\n    fetch(`/api/updateCounters`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ arrCounts: query })\r\n    }).then(response => response.json());\r\n\r\nconst logout = () =>\r\n    fetch(`/api/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json());\r\n\r\nconst loginFromToken = () =>\r\n    fetch(`/api/authFromToken`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json());\r\n\r\nexport {\r\n    sendOrder,\r\n    prodQuery,\r\n    prodAll,\r\n    login,\r\n    loginFromToken,\r\n    logout,\r\n    countersAll,\r\n    updateCounters\r\n};\r\n","import React, { Component } from 'react';\r\nimport { login, logout, loginFromToken } from '../api';\r\nconst { Provider, Consumer } = React.createContext();\r\n\r\nclass AuthProvider extends Component {\r\n    state = {\r\n        isAuthorized: false,\r\n        errorAuth: ''\r\n    };\r\n    errorMessage = error => {\r\n        if (error) {\r\n            this.setState({ errorAuth: error });\r\n        } else {\r\n            this.setState({ isAuthorized: true, errorAuth: '' });\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        loginFromToken()\r\n            .then(auth => {\r\n                this.errorMessage(auth.error);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleAutorize = (email, password) => {\r\n        login({ email, password })\r\n            .then(auth => {\r\n                this.errorMessage(auth.error);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    handleLogout = () => {\r\n        logout()\r\n            .then(() => {\r\n                this.setState({ isAuthorized: false, errorAuth: '' });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    setValueProvider = () => {\r\n        const { isAuthorized, errorAuth } = this.state;\r\n        return {\r\n            isAuthorized,\r\n            errorAuth,\r\n            handleAutorize: this.handleAutorize,\r\n            handleLogout: this.handleLogout,\r\n            redirectPath: '/login'\r\n        };\r\n    };\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return <Provider value={this.setValueProvider()}>{children}</Provider>;\r\n    }\r\n}\r\n\r\nconst withAuth = WrapperComponent => {\r\n    return class extends Component {\r\n        render() {\r\n            return (\r\n                <Consumer>\r\n                    {ConsumerProps => (\r\n                        <WrapperComponent {...ConsumerProps} {...this.props} />\r\n                    )}\r\n                </Consumer>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport { AuthProvider, withAuth };\r\n","import React, { PureComponent } from 'react';\r\nimport { prodAll, countersAll } from '../api';\r\n\r\nconst { Provider, Consumer } = React.createContext();\r\n\r\nconst socials = [\r\n    { icon: 'linkedin', link: '#' },\r\n    { icon: 'github-alt', link: '#' },\r\n    { icon: 'tumblr', link: '#' },\r\n    { icon: 'vk', link: '#' }\r\n];\r\n\r\n// const myNumber = [\r\n//     { id: 1, name: 'Возраст начала занятий на скрипке', count: 12 },\r\n//     { id: 2, name: 'Концертов отыграл', count: 23 },\r\n//     { id: 3, name: 'Максимальное число городов в туре', count: 91 },\r\n//     { id: 4, name: 'Лет на сцене в качестве скрипача', count: 41 }\r\n// ];\r\n\r\nclass DataProvider extends PureComponent {\r\n    state = { products: [], counters: [] };\r\n    loadProducts = () => {\r\n        prodAll()\r\n            .then(prosucts => {\r\n                this.setState({ products: prosucts.data });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    loadCounters = () => {\r\n        countersAll()\r\n            .then(counters => {\r\n                this.setState({ counters: counters.data });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    componentDidMount() {\r\n        this.loadCounters();\r\n        this.loadProducts();\r\n    }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     // console.log('shouldComponentUpdate(nextProps, nextState)');\r\n    //     // console.log(nextState, nextProps);\r\n    //     // console.log('----');\r\n    //     if (\r\n    //         nextState.products.length === 0 ||\r\n    //         nextState.counters.length === 0\r\n    //     ) {\r\n    //         return false;\r\n    //     } else {\r\n    //         return true;\r\n    //     }\r\n    // }\r\n    updateProducts = () => {\r\n        this.loadProducts();\r\n    };\r\n    updateCount = () => {\r\n        this.loadCounters();\r\n    };\r\n    setValueProvider = () => {\r\n        const { products, counters } = this.state;\r\n        return {\r\n            socials,\r\n            products,\r\n            counters,\r\n            updateProducts: this.updateProducts,\r\n            updateCount: this.updateCount,\r\n            loadCounters: this.loadCounters\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return <Provider value={this.setValueProvider()}>{children}</Provider>;\r\n    }\r\n}\r\n\r\nconst withData = WrapperComponent => {\r\n    return class extends PureComponent {\r\n        render() {\r\n            return (\r\n                <Consumer>\r\n                    {ConsumerProps => (\r\n                        <WrapperComponent {...ConsumerProps} {...this.props} />\r\n                    )}\r\n                </Consumer>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport { DataProvider, withData };\r\n","import React from 'react';\r\nimport { withData } from '../../context/';\r\n\r\nconst ForSocials = ({ socials }) => {\r\n    return (\r\n        <ul className=\"social\">\r\n            {socials.map(item => (\r\n                <li key={item.icon} className=\"social__item\">\r\n                    <a className=\"social__link\" href={item.link}>\r\n                        <i className={`fa fa-${item.icon}`} />\r\n                    </a>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst Socials = withData(ForSocials);\r\n\r\nexport { Socials };\r\n","import React from 'react';\r\nimport { Logo } from '../Logo';\r\nimport { Socials } from '../Socials';\r\n\r\nconst Header = ({ children, linkMain, socials }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container header__container\">\r\n                <div className=\"header__top\">\r\n                    <Logo linkMain={linkMain}>Архипов</Logo>\r\n                    <div className=\"header__social\">\r\n                        <Socials />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n// export default Header;\r\n\r\nexport { Header };\r\n","import React from 'react';\r\nimport music from '../../assets/img/Music.jpg';\r\n\r\nconst About = () => {\r\n    return (\r\n        <section className=\"music\">\r\n            <div className=\"container music__container\">\r\n                <div className=\"music__left\">\r\n                    <img src={music} alt=\"\" />\r\n                </div>\r\n                <div className=\"music__right about\">\r\n                    <div className=\"about__subtitle subtitle\">Обо мне</div>\r\n                    <h2 className=\"about__title title\">Я музыкант</h2>\r\n                    <div className=\"about__slogan\">\r\n                        “У музыки нет возраста и нации”\r\n                    </div>\r\n                    <div className=\"about__descriptons\">\r\n                        Когда мне было 11 лет, я увидел на «MTV», как Курт\r\n                        Кобейн поёт «Heart-Shaped Box», и замер в изумлении.\r\n                        Тогда он мне показался самым красивым человеком в мире.\r\n                        Даже в столь юном возрасте, я почувствовал его грусть.\r\n                    </div>\r\n                    <div className=\"about__note\">\r\n                        <span className=\"about__note-family\">Архипов</span>\r\n                        <span className=\"about__note-field\">\r\n                            - Победитель гремми 2017\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport { About };\r\n","import React, { PureComponent } from 'react';\r\nimport { withData } from '../../context/';\r\n\r\nclass ForMyNumbers extends PureComponent {\r\n    render() {\r\n        const { counters } = this.props;\r\n        console.log(counters);\r\n        return (\r\n            <section className=\"life\">\r\n                <div className=\"container life__container\">\r\n                    <h2 className=\"life__title\">Несколько чисел моей жизни</h2>\r\n                    <div className=\"life__slogan\">\r\n                        У музыки нет возраста и нации, <br />\r\n                        однажды мы уйдём, а она останется.\r\n                    </div>\r\n                    <ul className=\"life__skills\">\r\n                        {counters.map(item => (\r\n                            <li key={item._id} className=\"life__skill\">\r\n                                <div className=\"life__skill-number\">\r\n                                    {item.count}\r\n                                </div>\r\n                                <div className=\"life__skill-text\">\r\n                                    {item.headSite}\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <a className=\"life__link\" href=\"http://\">\r\n                        Читать историю\r\n                    </a>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyNumbers = withData(ForMyNumbers);\r\n\r\nexport { MyNumbers };\r\n","import React, { PureComponent } from 'react';\r\n// import productPhoto from '../../assets/img/products/Work1.jpg';\r\nimport { withData } from '../../context/';\r\n// import { prodAll } from '../../api';\r\n\r\nclass ForProducts extends PureComponent {\r\n    render() {\r\n        const { products } = this.props;\r\n        console.log(products);\r\n        return (\r\n            <section className=\"product\">\r\n                <div className=\"container\">\r\n                    <div className=\"product__subtitle subtitle\">\r\n                        Товары от студии Архипова\r\n                    </div>\r\n                    <h2 className=\"product__title title\">Мой личный бренд</h2>\r\n                    <ul className=\"product__list\">\r\n                        {products.map(item => (\r\n                            <li key={item.id} className=\"product__item\">\r\n                                <img\r\n                                    className=\"product__img\"\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                />\r\n                                <div className=\"product__hover\">\r\n                                    <div className=\"product__description\">\r\n                                        <div className=\"product__name\">\r\n                                            {item.name}\r\n                                        </div>\r\n                                        <div className=\"product__price\">\r\n                                            $ {item.price}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst Products = withData(ForProducts);\r\n\r\nexport { Products };\r\n","import React, { PureComponent } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Modal extends PureComponent {\r\n    el = document.createElement('div');\r\n\r\n    componentDidMount() {\r\n        const { children } = this.props;\r\n        if (children) {\r\n            document.body.appendChild(this.el);\r\n            this.el.id = 'modal';\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.el);\r\n    }\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        onClose();\r\n    };\r\n    render() {\r\n        const { children } = this.props;\r\n        const modalForm = (\r\n            <div className=\"modal-form\">\r\n                <div className=\"modal-form__info\">{children}</div>\r\n                <button\r\n                    className=\"modal-form__button button\"\r\n                    onClick={this.handleClose}\r\n                >\r\n                    Закрыть\r\n                </button>\r\n            </div>\r\n        );\r\n        return ReactDOM.createPortal(modalForm, this.el);\r\n    }\r\n}\r\n\r\nexport { Modal };\r\n","import React, { PureComponent } from 'react';\r\nimport { Modal } from '../Modal';\r\nimport { sendOrder } from '../../api';\r\n\r\nclass OrderMain extends PureComponent {\r\n    state = {\r\n        errorMessage: ''\r\n    };\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, email, message } = this.state;\r\n        if (!name || !email || !message) {\r\n            this.setState({ errorMessage: 'Все поля нужно заполнить!' });\r\n        } else {\r\n            sendOrder({ name, email, message })\r\n                .then(result => {\r\n                    this.setState({\r\n                        errorMessage: result.maessage,\r\n                        name: '',\r\n                        email: '',\r\n                        message: ''\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        // console.log(this.state);\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ errorMessage: '' });\r\n    };\r\n    render() {\r\n        const { errorMessage } = this.state;\r\n        return (\r\n            <section className=\"form\" id=\"form-msgemail\">\r\n                {errorMessage && (\r\n                    <Modal onClose={this.handleClose}>{errorMessage}</Modal>\r\n                )}\r\n                <div className=\"container\">\r\n                    <div className=\"form__subtitle subtitle\">\r\n                        Контактные данные\r\n                    </div>\r\n                    <h2 className=\"form__title title\">Пишите, пообщаемся</h2>\r\n                    <form className=\"form-email\" action=\"/\" method=\"POST\">\r\n                        <div className=\"form-email__line\">\r\n                            <label className=\"form-email__label\" htmlFor=\"\">\r\n                                Имя *\r\n                            </label>\r\n                            <input\r\n                                className=\"form-email__input\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-email__line\">\r\n                            <label className=\"form-email__label\" htmlFor=\"\">\r\n                                Email *\r\n                            </label>\r\n                            <input\r\n                                className=\"form-email__input\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.email}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-email__line\">\r\n                            <label className=\"form-email__label\" htmlFor=\"\">\r\n                                Сообщение\r\n                            </label>\r\n                            <textarea\r\n                                className=\"form-email__textarea\"\r\n                                name=\"message\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.message}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-email__line\">\r\n                            <button\r\n                                className=\"form-email__button button\"\r\n                                type=\"submit\"\r\n                                onClick={this.handleSubmit}\r\n                            >\r\n                                Отправить\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport { OrderMain };\r\n","import React from 'react';\r\nimport { Logo } from '../Logo';\r\nimport { Socials } from '../Socials';\r\nimport { withAuth } from '../../context/';\r\n\r\nconst ForFooter = ({ isAuthorized }) => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container footer__container\">\r\n                <div className=\"footer__auth\">\r\n                    <Logo linkMain=\"/login\">\r\n                        {isAuthorized ? 'Админка' : 'Авторизация'}\r\n                    </Logo>\r\n                </div>\r\n                <div className=\"footer__social\">\r\n                    <Socials />\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nconst Footer = withAuth(ForFooter);\r\n\r\nexport { Footer };\r\n","import React, { PureComponent } from 'react';\r\nimport { withAuth } from '../../context/';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Form extends PureComponent {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { handleAutorize } = this.props;\r\n        const { email, password } = this.state;\r\n        handleAutorize(email, password);\r\n    };\r\n    render() {\r\n        const { isAuthorized, errorAuth } = this.props;\r\n        return !isAuthorized ? (\r\n            <form className=\"form-login\" action=\"/login\" method=\"POST\">\r\n                {errorAuth && <div className=\"status\">{errorAuth}</div>}\r\n                <div className=\"form-login__line\">\r\n                    <label className=\"form-login__label\" htmlFor=\"\">\r\n                        Привет,\r\n                    </label>\r\n                    <input\r\n                        className=\"form-login__input\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"E-MAIL\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-login__line\">\r\n                    <input\r\n                        className=\"form-login__input\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-login__line\">\r\n                    <button\r\n                        onClick={this.handleSubmit}\r\n                        className=\"form-login__button\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Войти\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        ) : (\r\n            <Redirect to=\"/admin\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst LoginForm = withAuth(Form);\r\n\r\nexport { LoginForm };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from '../../context/';\r\n\r\nconst ForAdminHeader = props => {\r\n    const { handleLogout } = props;\r\n\r\n    return (\r\n        <header className=\"admin-header\">\r\n            <div className=\"container admin-header__container\">\r\n                <div className=\"admin-header__title\">\r\n                    Административная панель\r\n                </div>\r\n                <Link className=\"admin-header__link\" to=\"/\">\r\n                    Вернуться на сайт\r\n                </Link>\r\n                <div className=\"admin-header__logout\" onClick={handleLogout}>\r\n                    Выход\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nconst AdminHeader = withAuth(ForAdminHeader);\r\nexport { AdminHeader };\r\n","import React, { PureComponent } from 'react';\r\nimport { Modal } from '../Modal';\r\nimport { updateCounters } from '../../api';\r\nimport { withData } from '../../context/';\r\n\r\nclass ForAdminCounters extends PureComponent {\r\n    state = {\r\n        errorMessage: ''\r\n    };\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { age, concerts, cities, years } = this.state;\r\n        const { updateCount } = this.props;\r\n        if (age >= 0 && concerts >= 0 && cities >= 0 && years >= 0) {\r\n            this.setState({ errorMessage: '' });\r\n            const arrCounter = [\r\n                { name: 'age', count: age },\r\n                { name: 'concerts', count: concerts },\r\n                { name: 'cities', count: cities },\r\n                { name: 'years', count: years }\r\n            ];\r\n            updateCounters(arrCounter)\r\n                .then(series => {\r\n                    this.setState({\r\n                        errorMessage: series.maessage\r\n                    });\r\n                    updateCount();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            this.setState({\r\n                errorMessage: 'Все поля должны быть целым числом >=0!'\r\n            });\r\n        }\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ errorMessage: '' });\r\n    };\r\n    render() {\r\n        const { counters } = this.props;\r\n        const { errorMessage } = this.state;\r\n        return (\r\n            <form className=\"form-skill\" action=\"/admin/skills\" method=\"POST\">\r\n                {errorMessage && (\r\n                    <Modal onClose={this.handleClose}>{errorMessage}</Modal>\r\n                )}\r\n                <div className=\"form-title\">Счетчики</div>\r\n                {counters.map(item => {\r\n                    return (\r\n                        <label\r\n                            key={item._id}\r\n                            className=\"form-skill__input-line\"\r\n                        >\r\n                            <span className=\"form-skill__input-title\">\r\n                                {item.head}\r\n                            </span>\r\n                            <input\r\n                                className=\"form-skill__input\"\r\n                                name={item.name}\r\n                                type=\"number\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                    );\r\n                })}\r\n                <div className=\"form__btns form-skill__input-line\">\r\n                    <button\r\n                        className=\"button\"\r\n                        type=\"submit\"\r\n                        onClick={this.handleSubmit}\r\n                    >\r\n                        Сохранить\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst AdminCounters = withData(ForAdminCounters);\r\n\r\nexport { AdminCounters };\r\n","import React, { PureComponent } from 'react';\r\nimport { Modal } from '../Modal';\r\nimport { prodQuery } from '../../api';\r\nimport { withData } from '../../context/';\r\n\r\nclass ForAdminProducts extends PureComponent {\r\n  state = {\r\n    errorMessage: ''\r\n  };\r\n\r\n  myRef = React.createRef();\r\n  handleChange = e => {\r\n    if (e.target.files) {\r\n      this.setState({ [e.target.name]: e.target.files[0] });\r\n    } else this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { photo, name, price } = this.state;\r\n    const { updateProducts } = this.props;\r\n    if (!photo || !name || !price) {\r\n      this.setState({ errorMessage: 'Все поля нужно заполнить!' });\r\n    } else {\r\n      prodQuery({ name: name, price: price, image: photo })\r\n        .then(series => {\r\n          this.myRef.current.value = '';\r\n          this.setState({\r\n            errorMessage: series.maessage,\r\n            photo: '',\r\n            name: '',\r\n            price: ''\r\n          });\r\n          updateProducts();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ errorMessage: '' });\r\n  };\r\n  render() {\r\n    const { errorMessage, name, price } = this.state;\r\n    return (\r\n      <form\r\n        className=\"form-upload\"\r\n        action=\"/admin/upload\"\r\n        method=\"POST\"\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        {errorMessage && (\r\n          <Modal onClose={this.handleClose}>{errorMessage}</Modal>\r\n        )}\r\n        <div className=\"form-title\">Добавить товар</div>\r\n        <div className=\"form-upload__input-line\">\r\n          <div className=\"form-upload__wraper\">\r\n            <label className=\"form-upload__label\">\r\n              <input\r\n                className=\"form-upload__input-file\"\r\n                name=\"photo\"\r\n                type=\"file\"\r\n                ref={this.myRef}\r\n                onChange={this.handleChange}\r\n              />\r\n              <span className=\"form-upload__input-file-title\">\r\n                Загрузить фото\r\n              </span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-upload__input-line\">\r\n          <input\r\n            className=\"form-upload__input\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Название\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-upload__input-line\">\r\n          <input\r\n            className=\"form-upload__input\"\r\n            name=\"price\"\r\n            type=\"text\"\r\n            placeholder=\"Цена\"\r\n            value={price}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-upload__input-line form-upload__input-line--btn\">\r\n          <button className=\"button\" type=\"submit\" onClick={this.handleSubmit}>\r\n            Добавить\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst AdminProducts = withData(ForAdminProducts);\r\n\r\nexport { AdminProducts };\r\n","import React from 'react';\r\nimport { AdminCounters } from '../AdminCounters';\r\nimport { AdminProducts } from '../AdminProducts';\r\n\r\nconst AdminContent = () => {\r\n    return (\r\n        <section className=\"admin-content\">\r\n            <div className=\"container admin-content__container\">\r\n                <div className=\"form-container\">\r\n                    <AdminCounters />\r\n                    <AdminProducts />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport { AdminContent };\r\n","import React from 'react';\r\nimport { AdminHeader, AdminContent } from '../components/';\r\n\r\nconst Admin = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <AdminHeader />\r\n            <AdminContent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Admin };\r\n","import React from 'react';\r\nimport { Header } from '../components/';\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <Header linkMain=\"/\">\r\n            <div className=\"header__content\">\r\n                <h1 className=\"header__title\">404</h1>\r\n            </div>\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport { Error404 };\r\n","import React from 'react';\r\nimport { Header, LoginForm } from '../components/';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <Header linkMain=\"/\">\r\n            <LoginForm />\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport { Login };\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n    Header,\r\n    About,\r\n    MyNumbers,\r\n    Products,\r\n    OrderMain,\r\n    Footer\r\n} from '../components/';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Fragment>\r\n            <Header>\r\n                <div className=\"header__content\">\r\n                    <h1 className=\"header__title\">“Главное — это музыка”</h1>\r\n                    <a\r\n                        className=\"header__link\"\r\n                        href=\"https://www.youtube.com/watch?v=nBE85Qy_SLc\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                    >\r\n                        Смотреть видео\r\n                    </a>\r\n                </div>\r\n                <div className=\"header__scroll\">\r\n                    <div className=\"header__scroll-text\">Scroll</div>\r\n                </div>\r\n            </Header>\r\n            <About />\r\n            <MyNumbers />\r\n            <Products />\r\n            <OrderMain />\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport { Main };\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport { Main, Login, Admin, Error404 } from './pages/';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { PrivateRoute as PrivRoute } from './components/';\nimport { AuthProvider, withAuth, DataProvider } from './context/';\n\nconst PrivateRoute = withAuth(PrivRoute);\n\nclass App extends Component {\n    render() {\n        return (\n            <DataProvider>\n                <AuthProvider>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path=\"/\" exact component={Main} />\n                            <Route path=\"/login\" component={Login} />\n                            <PrivateRoute path=\"/admin\" component={Admin} />\n                            <Route path=\"*\" exact component={Error404} />\n                        </Switch>\n                    </BrowserRouter>\n                </AuthProvider>\n            </DataProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n    component: RouteComponent,\r\n    isAuthorized,\r\n    redirectPath,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                isAuthorized ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={redirectPath} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport { PrivateRoute };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}